name: Rust CI

on:
  workflow_dispatch:
  push:
    branches: ["main"]
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy
      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y libsqlite3-dev

      - name: Cargo fetch
        run: cargo fetch

      - name: Check formatting
        run: cargo fmt --all --check

      - name: Cargo check (all targets)
        run: cargo check --all --all-targets --all-features

      - name: Run linter (clippy)
        run: cargo clippy --all --all-targets --all-features -- -D warnings

      - name: Run tests
        run: cargo test --all --all-features

      - name: Run example suite
        if: ${{ secrets.OPENAI_API_KEY != '' }}
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: cargo run --bin run_examples --quiet

  publish:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Verify build before publish
        run: |
          cargo fetch
          cargo check --all --all-targets --all-features
      - name: Cargo package (sanity)
        run: cargo package -v
      - name: Publish to crates.io
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: cargo publish --token $CARGO_REGISTRY_TOKEN
